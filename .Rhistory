base$funder <- funder
length(levels(funder))
#Installer - reduce factor levels
NUM_LEVELS_INSTALLER = 10 #Installer will have this many + 1 levels
#############################################################################################
length(levels(installer))
installerNames <- names(summary(base$installer)[1:NUM_LEVELS_INSTALLER])
installer <- factor(base$installer, levels=c(installerNames, "Other"))
installer[is.na(installer)] <- "Other"
base$installer <- installer
length(levels(installer))
base<-base[!(management=="unknown"),]
base<-base[!(scheme_management==""),]
base<-base[!(source=="unknown"),]
base<-base[!(quantity=="unknown"),]
base<-base[!(payment_type=="unknown"),]
base<-base[!(quality_group=="unknown"),]
base<-base[!(construction_year==0),]
base$age<-construction_year-1960
#### PRIMER MODELO!!!! WOOOOOOOO
set.seed(123)
train<- base  %>% sample_n(1000)
test<- base  %>% sample_n(200)
levels(payment_type)
table(payment_type)
#Aqui van las rutas de la compu de cada uno donde tienen el repositorio
setwd('/Users/ramonosx/Documents/GitHub/experimentos2-TAARIFA')
# Librerias
library('dplyr')
# Carga de los datos
## LA VARIABLE A PREDECIR ES status_group
predictoras<-read.csv('predictoras.csv', header = T)
respuesta<-read.csv('respuesta.csv', header = T)
base<-merge(predictoras,respuesta,by= 'id')
predictoras<-NULL
respuesta<-NULL
# Analisis preliminar
##VAR respuesta con ceros y unos
base<- base[!(status_group=="functional needs repair"),]
base$status = 1*(base$status_group=='functional')
summary(status)
##### limpieza de variables
##################   MIGUEL  ########################
#Funder - reduce factor levels
NUM_LEVELS_FUNDER = 10 #Funder will have this many + 1 levels
#############################################################################################
length(levels(funder))
funderNames <- names(summary(base$funder)[1:NUM_LEVELS_FUNDER])
funder <- factor(base$funder, levels=c(funderNames, "Other"))
funder[is.na(funder)] <- "Other"
base$funder <- funder
length(levels(funder))
#Installer - reduce factor levels
NUM_LEVELS_INSTALLER = 10 #Installer will have this many + 1 levels
#############################################################################################
length(levels(installer))
installerNames <- names(summary(base$installer)[1:NUM_LEVELS_INSTALLER])
installer <- factor(base$installer, levels=c(installerNames, "Other"))
installer[is.na(installer)] <- "Other"
base$installer <- installer
length(levels(installer))
base<-base[!(base$management=="unknown"),]
base<-base[!(base$scheme_management==""),]
base<-base[!(base$source=="unknown"),]
base<-base[!(base$quantity=="unknown"),]
base<-base[!(base$payment_type=="unknown"),]
base<-base[!(base$quality_group=="unknown"),]
base<-base[!(base$construction_year==0),]
base$age<-construction_year-1960
#### PRIMER MODELO!!!! WOOOOOOOO
set.seed(123)
train<- base  %>% sample_n(1000)
test<- base  %>% sample_n(200)
table(payment_type)
length(base$management=="unknown")
table(base$management=="unknown")
table(base$management="unknown")
table(base$management=='unknown')
table(management)
names(management)
levels(management)
management=='unknown'
#Aqui van las rutas de la compu de cada uno donde tienen el repositorio
setwd('/Users/ramonosx/Documents/GitHub/experimentos2-TAARIFA')
# Librerias
library('dplyr')
# Carga de los datos
## LA VARIABLE A PREDECIR ES status_group
predictoras<-read.csv('predictoras.csv', header = T)
respuesta<-read.csv('respuesta.csv', header = T)
base<-merge(predictoras,respuesta,by= 'id')
predictoras<-NULL
respuesta<-NULL
# Analisis preliminar
##VAR respuesta con ceros y unos
base<- base[!(status_group=="functional needs repair"),]
base$status = 1*(base$status_group=='functional')
summary(status)
##### limpieza de variables
##################   MIGUEL  ########################
#Funder - reduce factor levels
NUM_LEVELS_FUNDER = 10 #Funder will have this many + 1 levels
#############################################################################################
length(levels(funder))
funderNames <- names(summary(base$funder)[1:NUM_LEVELS_FUNDER])
funder <- factor(base$funder, levels=c(funderNames, "Other"))
funder[is.na(funder)] <- "Other"
base$funder <- funder
length(levels(funder))
#Installer - reduce factor levels
NUM_LEVELS_INSTALLER = 10 #Installer will have this many + 1 levels
#############################################################################################
length(levels(installer))
installerNames <- names(summary(base$installer)[1:NUM_LEVELS_INSTALLER])
installer <- factor(base$installer, levels=c(installerNames, "Other"))
installer[is.na(installer)] <- "Other"
base$installer <- installer
length(levels(installer))
base<-base[!(management=='unknown'),]
table(management)
table(base$management)
setwd('/Users/ramonosx/Documents/GitHub/experimentos2-TAARIFA')
library('dplyr')
library(dplyr)
library('fmsb')
library('lme4')
library('lmerTest')
install.packages("dplyr")
install.packages("fmsb")
install.packages("lmerTest")
library('dplyr')
library('fmsb')
library('lme4')
library('lmerTest')
options(contrasts=c("contr.sum","contr.poly"))
predictoras<-read.csv('predictoras.csv', header = T)
respuesta<-read.csv('respuesta.csv', header = T)
base<-merge(predictoras,respuesta,by= 'id')
predictoras<-NULL
respuesta<-NULL
base<- base[!(status_group=="functional needs repair"),]
base$status = 1*(base$status_group=='functional')
base<- base[!(base$status_group=="functional needs repair"),]
base$status = 1*(base$status_group=='functional')
summary(status)
summary(base$status)
View(base)
NUM_LEVELS_FUNDER = 20 #Funder will have this many + 1 levels
#############################################################################################
length(levels(funder))
length(levels(base$funder))
funderNames <- names(summary(base$funder)[1:NUM_LEVELS_FUNDER])
funder <- factor(base$funder, levels=c(funderNames, "Other"))
funder[is.na(funder)] <- "Other"
base$funder <- funder
length(levels(funder))
NUM_LEVELS_INSTALLER = 20 #Installer will have this many + 1 levels
#############################################################################################
length(levels(base$installer))
installerNames <- names(summary(base$installer)[1:NUM_LEVELS_INSTALLER])
installer <- factor(base$installer, levels=c(installerNames, "Other"))
installer[is.na(installer)] <- "Other"
base$installer <- installer
length(levels(installer))
base$waterpoint_type_group[base$waterpoint_type_group=="dam"]<-"other"
base$waterpoint_type_group[base$waterpoint_type_group=="cattle trough"]<-"other"
base<-base[!(base$management=='unknown'),]
base<-base[!(base$scheme_management==''),]
base<-base[!(base$source=='unknown'),]
base<-base[!(base$quantity=='unknown'),]
base<-base[!(base$payment_type=='unknown'),]
base<-base[!(base$quality_group=='unknown'),]
base<-base[!(base$construction_year==0),]
base$age<-base$construction_year-1960
set.seed(123)
train<- base  %>% sample_n(1000)
test<- base  %>% sample_n(200)
modFinal<-glmer(status ~ region + amount_tsh + population +
+gps_height
+extraction_type_class
+age
+management
+source
+payment_type
+quantity
+ (1 | funder:amount_tsh)
+(1 | funder:population)
+ (1 | waterpoint_type_group:population)
+ (1 | waterpoint_type_group:gps_height)
+  (1 | waterpoint_type_group:extraction_type_class)
+  (1 | waterpoint_type_group:age)
+  (1 | waterpoint_type_group:payment_type),
family = "binomial", data = train)
drop1(modFinal, test="Chisq")
modFinal<-glmer(status ~ region + amount_tsh + population +
+gps_height
+extraction_type_class
+age
+management
+source
+payment_type
+quantity
+ (1 | funder)
+ (1 | funder:amount_tsh)
+(1 | funder:population)
+ (1 | waterpoint_type_group)
+ (1 | waterpoint_type_group:population)
+ (1 | waterpoint_type_group:gps_height)
+  (1 | waterpoint_type_group:extraction_type_class)
+  (1 | waterpoint_type_group:age)
+  (1 | waterpoint_type_group:payment_type),
family = "binomial", data = train)
drop1(modFinal, test="Chisq")
modFinal2<-glmer(status ~ region + amount_tsh + population +
+gps_height+extraction_type_class +age
+management+source+payment_type+quantity+ (1 | funder)
+(1 | waterpoint_type_group), family = "binomial", data = train)
contrasts(train$status)
train$status
summary(modFinal2)
contrasts(factor(train$status))
NagelkerkeR2(modFinal2)
mod0<-glmer(status ~ 1, family = "binomial", data = train)
NagelkerkeR2(modFinal2)
mod1<-glmer(status ~amount_tsh + population +
+gps_height+extraction_type_class +age
+management+source+payment_type+quantity+ (1 | funder)
+(1 | waterpoint_type_group), family = "binomial", data = train)
anova(mod1,modFinal2)
mod2<-glmer(status ~ region + population +
+gps_height+extraction_type_class +age
+management+source+payment_type+quantity+ (1 | funder)
+(1 | waterpoint_type_group), family = "binomial", data = train)
anova(mod2,modFinal2)
mod3<-glmer(status ~ region + amount_tsh +gps_height+extraction_type_class +age
+management+source+payment_type+quantity+ (1 | funder)
+(1 | waterpoint_type_group), family = "binomial", data = train)
anova(mod3,modFinal2)
mod4<-glmer(status ~ region + amount_tsh + population + extraction_type_class +age
+management+source+payment_type+quantity+ (1 | funder)
+(1 | waterpoint_type_group), family = "binomial", data = train)
anova(mod4,modFinal2)
mod5<-glmer(status ~ region + amount_tsh + population +gps_height+age
+management+source+payment_type+quantity+ (1 | funder)
+(1 | waterpoint_type_group), family = "binomial", data = train)
anova(mod5,modFinal2)
mod6<-glmer(status ~ region + amount_tsh + population +gps_height+extraction_type_class
+management+source+payment_type+quantity+ (1 | funder)
+(1 | waterpoint_type_group), family = "binomial", data = train)
anova(mod6,modFinal2)
mod7<-glmer(status ~ region + amount_tsh + population+gps_height+extraction_type_class +age
+source+payment_type+quantity+ (1 | funder)+(1 | waterpoint_type_group), family = "binomial", data = train)
anova(mod7,modFinal2)
mod8<-glmer(status ~ region + amount_tsh + population +gps_height+extraction_type_class +age
+management+payment_type+quantity+ (1 | funder)
+(1 | waterpoint_type_group), family = "binomial", data = train)
anova(mod8,modFinal2)
mod9<-glmer(status ~ region + amount_tsh + population+gps_height+extraction_type_class +age
+management+source+quantity+ (1 | funder)
+(1 | waterpoint_type_group), family = "binomial", data = train)
anova(mod9,modFinal2)
mod10<-glmer(status ~ region + amount_tsh + population+gps_height+extraction_type_class +age
+management+source+payment_type+(1 | funder)
+(1 | waterpoint_type_group), family = "binomial", data = train)
anova(mod10,modFinal2)
mod11<-glmer(status ~ region + amount_tsh + population +
+gps_height+extraction_type_class +age
+management+source+payment_type+quantity
+(1 | waterpoint_type_group), family = "binomial", data = train)
anova(mod11,modFinal2)
#12(1 | waterpoint_type_group)
modl2<-glmer(status ~ region + amount_tsh + population+gps_height
+extraction_type_class +age+management+source
+payment_type+quantity+ (1 | funder), family = "binomial", data = train)
anova(mod12,modFinal2)
modl2<-glmer(status ~ region + amount_tsh + population+gps_height+
+extraction_type_class +age+management+source
+payment_type+quantity+ (1 | funder), family = "binomial", data = train)
anova(mod12,modFinal2)
mod12<-glmer(status ~ region + amount_tsh + population +
+gps_height+extraction_type_class +age
+management+source+payment_type+quantity+ (1 | funder), family = "binomial", data = train)
anova(mod12,modFinal2)
library('dplyr')
library('fmsb')
library('lme4')
library('lmerTest')
library(lattice)
library(piecewiseSEM)
library(data.table)
options(contrasts=c("contr.sum","contr.poly"))
predictoras<-read.csv('predictoras.csv', header = T)
respuesta<-read.csv('respuesta.csv', header = T)
base<-merge(predictoras,respuesta,by= 'id')
predictoras<-NULL
respuesta<-NULL
#Funder - reduce factor levels
NUM_LEVELS_FUNDER = 20 #Funder will have this many + 1 levels
#############################################################################################
length(levels(base$funder))
funderNames <- names(summary(base$funder)[1:NUM_LEVELS_FUNDER])
funder <- factor(base$funder, levels=c(funderNames, "Other"))
funder[is.na(funder)] <- "Other"
base$funder <- funder
length(levels(funder))
#Installer - reduce factor levels
NUM_LEVELS_INSTALLER = 20 #Installer will have this many + 1 levels
#############################################################################################
length(levels(base$installer))
installerNames <- names(summary(base$installer)[1:NUM_LEVELS_INSTALLER])
installer <- factor(base$installer, levels=c(installerNames, "Other"))
installer[is.na(installer)] <- "Other"
base$installer <- installer
length(levels(installer))
base$waterpoint_type_group[base$waterpoint_type_group=="dam"]<-"other"
base$waterpoint_type_group[base$waterpoint_type_group=="cattle trough"]<-"other"
base$management[base$management=="other - school"]<-"other"
base$management[base$management=="trust"]<-"other"
base$management[base$management=="company"]<-"private operator"
base$management[base$management=="water board"]<- "water authority"
base<-base[!(base$management=='unknown'),]
base<-base[!(base$scheme_management==''),]
base<-base[!(base$source=='unknown'),]
base<-base[!(base$quantity=='unknown'),]
base<-base[!(base$payment_type=='unknown'),]
base<-base[!(base$quality_group=='unknown'),]
base<-base[!(base$construction_year==0),]
base$age<-base$construction_year-1960
set.seed(123)
train<- base  %>% sample_n(1000)
test<- base  %>% sample_n(200)
########################################
modFinal2<-glmer(status ~ region + amount_tsh + population +
+gps_height+extraction_type_class +age
+management+source+payment_type+quantity+ (1 | funder)
+(1 | waterpoint_type_group), family = "binomial", data = train)
modFinal2<-glmer(status ~ region + amount_tsh + population +
+gps_height+extraction_type_class +age
+management+source+payment_type+quantity+ (1 | funder)
+(1 | waterpoint_type_group), family = "binomial", data = train)
View(test)
library('dplyr')
library('fmsb')
library('lme4')
library('lmerTest')
library(lattice)
library(piecewiseSEM)
library(data.table)
options(contrasts=c("contr.sum","contr.poly"))
predictoras<-read.csv('predictoras.csv', header = T)
respuesta<-read.csv('respuesta.csv', header = T)
base<-merge(predictoras,respuesta,by= 'id')
predictoras<-NULL
respuesta<-NULL
base<- base[!(base$status_group=="functional needs repair"),]
base$status = 1*(base$status_group=='functional')
summary(base$status)
#Funder - reduce factor levels
NUM_LEVELS_FUNDER = 20 #Funder will have this many + 1 levels
#############################################################################################
length(levels(base$funder))
funderNames <- names(summary(base$funder)[1:NUM_LEVELS_FUNDER])
funder <- factor(base$funder, levels=c(funderNames, "Other"))
funder[is.na(funder)] <- "Other"
base$funder <- funder
length(levels(funder))
#Installer - reduce factor levels
NUM_LEVELS_INSTALLER = 20 #Installer will have this many + 1 levels
#############################################################################################
length(levels(base$installer))
installerNames <- names(summary(base$installer)[1:NUM_LEVELS_INSTALLER])
installer <- factor(base$installer, levels=c(installerNames, "Other"))
installer[is.na(installer)] <- "Other"
base$installer <- installer
length(levels(installer))
base$waterpoint_type_group[base$waterpoint_type_group=="dam"]<-"other"
base$waterpoint_type_group[base$waterpoint_type_group=="cattle trough"]<-"other"
base$management[base$management=="other - school"]<-"other"
base$management[base$management=="trust"]<-"other"
base$management[base$management=="company"]<-"private operator"
base$management[base$management=="water board"]<- "water authority"
base<-base[!(base$management=='unknown'),]
base<-base[!(base$scheme_management==''),]
base<-base[!(base$source=='unknown'),]
base<-base[!(base$quantity=='unknown'),]
base<-base[!(base$payment_type=='unknown'),]
base<-base[!(base$quality_group=='unknown'),]
base<-base[!(base$construction_year==0),]
base$age<-base$construction_year-1960
train$status
#### PRIMER MODELO!!!! WOOOOOOOO
set.seed(123)
train<- base  %>% sample_n(1000)
test<- base  %>% sample_n(200)
set.seed(123)
train<- base  %>% sample_n(1000)
modFinal2<-glmer(status ~ region + amount_tsh + population +
+gps_height+extraction_type_class +age
+management+source+payment_type+quantity+ (1 | funder)
+(1 | waterpoint_type_group), family = "binomial", data = train)
?fixef()
pred=predict(modFinal2)
fit=fixef(modFinal2)
fit
?predict.glm
fit=fitted(modFinal2)
fit
?fitted
predict(modFinal2,type="response")
p=predict(modFinal2,type="response")
class=1*(fit>0.5)
tab=prob.table(table(class,train$status))
?prop.table
libary(car)
library(car)
tab=prob.table(table(class,train$status))
tab=prop.table(table(class,train$status))
prop.table(tab)
sum(diag(prop.table(table(class,train$status))))
curve( exp(fixef(modFinal2)[1]+ fixef(modFinal2)[2]*x), add=T, col=1 , lwd=2  )
fixef(modFinal2)[2]
summary(modFinal2)
fixef(modFinal2)[26]
curve( exp(fixef(modFinal2)[1]+ fixef(modFinal2)[26]*x), add=T, col=1 , lwd=2  )
curve( exp(fixef(modFinal2)[1]+ fixef(modFinal2)[26]*x), add=T, col=1 , lwd=2  )
pozos=train
pozos=train
save(pozos, file="pozos.Rdata")
table(base$status)
table(train$status)
prop.table(train$status)
prop.table(table(train$status))
prop.table(table(base$status))
library(car)
library('dplyr')
library('fmsb')
library('lme4')
library('lmerTest')
library(lattice)
library(piecewiseSEM)
library(data.table)
options(contrasts=c("contr.sum","contr.poly"))
predictoras<-read.csv('predictoras.csv', header = T)
respuesta<-read.csv('respuesta.csv', header = T)
base<-merge(predictoras,respuesta,by= 'id')
predictoras<-NULL
respuesta<-NULL
base<- base[!(base$status_group=="functional needs repair"),]
base$status = 1*(base$status_group=='functional')
summary(base$status)
##### limpieza de variables
##################   MIGUEL  ########################
#Funder - reduce factor levels
NUM_LEVELS_FUNDER = 20 #Funder will have this many + 1 levels
#############################################################################################
length(levels(base$funder))
funderNames <- names(summary(base$funder)[1:NUM_LEVELS_FUNDER])
funder <- factor(base$funder, levels=c(funderNames, "Other"))
funder[is.na(funder)] <- "Other"
base$funder <- funder
length(levels(funder))
#Installer - reduce factor levels
NUM_LEVELS_INSTALLER = 20 #Installer will have this many + 1 levels
#############################################################################################
length(levels(base$installer))
installerNames <- names(summary(base$installer)[1:NUM_LEVELS_INSTALLER])
installer <- factor(base$installer, levels=c(installerNames, "Other"))
installer[is.na(installer)] <- "Other"
base$installer <- installer
length(levels(installer))
base$waterpoint_type_group[base$waterpoint_type_group=="dam"]<-"other"
base$waterpoint_type_group[base$waterpoint_type_group=="cattle trough"]<-"other"
base$management[base$management=="other - school"]<-"other"
base$management[base$management=="trust"]<-"other"
base$management[base$management=="company"]<-"private operator"
base$management[base$management=="water board"]<- "water authority"
base<-base[!(base$management=='unknown'),]
base<-base[!(base$scheme_management==''),]
base<-base[!(base$source=='unknown'),]
base<-base[!(base$quantity=='unknown'),]
base<-base[!(base$payment_type=='unknown'),]
base<-base[!(base$quality_group=='unknown'),]
base<-base[!(base$construction_year==0),]
base$age<-base$construction_year-1960
#train$status
#### PRIMER MODELO!!!! WOOOOOOOO
set.seed(123)
train<- base  %>% sample_n(1000)
test<- base  %>% sample_n(200)
modFinal2<-glmer(status ~ region + amount_tsh + population +
+gps_height+extraction_type_class +age
+management+source+payment_type+quantity+ (1 | funder)
+(1 | waterpoint_type_group), family = "binomial", data = train)
prop.table(table(class,train$status))
prop.table(table(class,train$status))
fit=fitted(modFinal2)
modFinal2<-glmer(status ~ region + amount_tsh + population +
+gps_height+extraction_type_class +age
+management+source+payment_type+quantity+ (1 | funder)
+(1 | waterpoint_type_group), family = "binomial", data = train)
fit=fitted(modFinal2)
class=1*(fit>0.5)
prop.table(table(class,train$status))
prop.table(table(class,train$status==0))
malos=train[train$status==0]
prop.table(table(class,train$status==0))
malos=train[train$status==0]
table(fit)
prop.table(table(class,train$status),2)
table(table(class,train$status),2)
table(table(class,train$status))
table(class,train$status)
